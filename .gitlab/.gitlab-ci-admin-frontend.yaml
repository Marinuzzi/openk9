################################################################################
#                                   STAGES                                     #
################################################################################

stages:
  - build-image
  - build-verifier
  - container-scanning
  - restart
  - publish


include:
  - local: '/.gitlab/.gitlab-templates.yaml'

################################################################################
#                                    JOBS                                       #
################################################################################

#################
# Fetch Version #
#################
Fetch version:
  stage: build-image
  image: node:16-alpine
  script:
    - cd js-packages/admin-ui
    - export VERSION=$(node -p "require('./package.json').version")
    - echo "VERSION=$VERSION" > $CI_PROJECT_DIR/version.env
  artifacts:
    paths:
      - version.env
    expire_in: 1 day

######################### BUILD ADMIN FRONTEND ########################
Build Admin Frontend:
  stage: build-image
  image:
    name: gcr.io/kaniko-project/executor:v1.23.2-debug
    entrypoint: [""]
  variables:
    DOCKER_CONFIG: "/kaniko/.docker"
  needs:
    - job: Fetch version
      artifacts: true
  script:
    # Carica la versione dall'artifact
    - source $CI_PROJECT_DIR/version.env
    - echo "=== Building Admin UI with VERSION=$VERSION ==="
    - export NODE_OPTIONS="--max-old-space-size=4096"
    - echo "=== Configurazione credenziali Kaniko ==="
    - mkdir -p /kaniko/.docker
    - |
      echo "{\"auths\":{\"$CI_REGISTRY_NAME\":{\"auth\":\"$(printf "%s:%s" \
      "${CI_REGISTRY_USERNAME}" "${CI_REGISTRY_PASSWORD}" \
      | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json

    - echo "=== Build e push con Kaniko ==="
    - |
      /kaniko/executor \
        --context "${CI_PROJECT_DIR}" \
        --dockerfile "${CI_PROJECT_DIR}/js-packages/admin-ui/Dockerfile" \
        --destination "${CI_REGISTRY_NAME}/openk9/admin-ui:$VERSION"
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'


###################### BUILD VERIFIER (ADMIN UI) ######################
Build Verifier:
  stage: build-verifier
  image: node:14
  script:
    - cd js-packages/admin-ui
    - yarn install
    - yarn build
  rules:
    - changes:
        - js-packages/admin-ui/**/*
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

####################### CONTAINER SCANNING (ADMIN) #######################
Container Scanning:
  stage: container-scanning
  image: $CI_TEMPLATE_REGISTRY_HOST/security-products/container-scanning:latest
  # Dipende dalla build per assicurarsi che l'immagine esista giÃ 
  dependencies:
    - "Fetch version"
    - "Build Admin Frontend"
  script:
    - source version.env
    - echo "=== Scanning image ${CI_REGISTRY_NAME}/openk9/admin-ui:$VERSION ==="
    - container-scanning scan --image "${CI_REGISTRY_NAME}/openk9/admin-ui:$VERSION"
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

######################### TRIGGER RESTART (ADMIN) ########################
Trigger Restart:
  stage: restart
  image: alpine:latest
  script:
    - apk add --no-cache curl
    - echo "Triggering restart for Admin Frontend"
    - |
      curl -X POST \
        -F "token=${RESTART_TRIGGER_TOKEN}" \
        -F "variables[TRIGGER_JOB]=restart-admin-frontend" \
        -F "ref=main" \
        "${RESTART_TRIGGER_URL}"
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

####################### PUBLISH ADMIN FRONTEND #######################
Publish Admin Frontend:
  stage: publish
  image: node:16
  script:
    - cd js-packages/admin-ui
    - pwd
    - whoami
    - yarn install
    - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> ~/.npmrc
    - npm publish --access public
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: manual
    - when: never


####################### DEPENDENCY CHECK #######################

Dependency Check Admin UI:
  stage: dependency-check
  needs:
    - job: "Trigger Admin Frontend"
  extends: .dependency_check_frontend_template
  allow_failure: true
  script:
    - cd js-packages/admin-ui
    - /analyzer run
