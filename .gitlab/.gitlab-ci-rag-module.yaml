################################################################################
#                           STAGES, VARIABLES & INCLUDE                         #
################################################################################

stages:
  - build-image
  - container-scanning

variables:
  KANIKO_IMAGE: "gcr.io/kaniko-project/executor:v1.23.2-debug"
  CS_ANALYZER_IMAGE: "$CI_TEMPLATE_REGISTRY_HOST/security-products/container-scanning:7"

include:
  - local: '/.gitlab/.gitlab-templates.yaml'


################################################################################
#                                   JOBS                                        #
################################################################################

######################## BUILD RAG IMAGE (KANIKO) ########################
Build Rag Image:
  stage: build-image
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "=== Configurazione credenziali Kaniko ==="
    - mkdir -p /kaniko/.docker
    - |
      echo "{\"auths\":{\"registry.smc.it:49083\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USERNAME}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" \
      > /kaniko/.docker/config.json
    - |
      if [[ "$CI_COMMIT_BRANCH" == "main" || "$CI_COMMIT_TAG" != "" ]]; then
        echo "[RAG] Build & push come :3.0.0-SNAPSHOT"
        /kaniko/executor \
          --context "${CI_PROJECT_DIR}/ai-packages/rag-module" \
          --dockerfile "${CI_PROJECT_DIR}/ai-packages/rag-module/Dockerfile" \
          --destination "${CI_REGISTRY_NAME}/openk9/rag-module:3.0.0-SNAPSHOT"
      elif [[ "$CI_PIPELINE_SOURCE" == "merge_request_event" ]]; then
        echo "[RAG] Build & push come :merge-request"
        /kaniko/executor \
          --context "${CI_PROJECT_DIR}/ai-packages/rag-module" \
          --dockerfile "${CI_PROJECT_DIR}/ai-packages/rag-module/Dockerfile" \
          --destination "${CI_REGISTRY_NAME}/openk9/rag-module:3.0.0-SNAPSHOT"
      elif [[ "$CI_COMMIT_BRANCH" =~ ^[0-9]+-.*$ ]]; then
        echo "[RAG] Feature => build & push :3.0.0-SNAPSHOT"
        /kaniko/executor \
          --context "${CI_PROJECT_DIR}/ai-packages/rag-module" \
          --dockerfile "${CI_PROJECT_DIR}/ai-packages/rag-module/Dockerfile" \
          --destination "${CI_REGISTRY_NAME}/openk9/rag-module:3.0.0-SNAPSHOT"
      fi
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_TAG'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH =~ /^[0-9]+-.*$/'


######################## CONTAINER SCANNING RAG #########################
Container Scanning Rag:
  dependencies: [Build Rag Image]
  stage: container-scanning
  image: $CS_ANALYZER_IMAGE
  variables:
    CS_REGISTRY_USER: "$CI_REGISTRY_USERNAME"
    CS_REGISTRY_PASSWORD: "$CI_REGISTRY_PASSWORD"
    GIT_STRATEGY: fetch
    REGISTRY_COMPONENT_NAME: "rag-module"
    VERSION: "3.0.0-SNAPSHOT"  # Da definire meglio la versione (viene gestita sopra)
  allow_failure: true
  artifacts:
    reports:
      container_scanning: gl-container-scanning-report.json
      cyclonedx: "**/gl-sbom-*.cdx.json"
    paths:
      - gl-container-scanning-report.json
      - gl-dependency-scanning-report.json
      - "**/gl-sbom-*.cdx.json"
  before_script:
    - export VERSION="3.0.0-SNAPSHOT"
    - export CS_IMAGE="$CI_REGISTRY_NAME/openk9/$REGISTRY_COMPONENT_NAME:$VERSION"
    - echo "Using version $VERSION"
  script:
    - gtcs scan
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
