image:
  # We want latest PostgreSQL 14.x
  tag: 14

auth:
  ## @param auth.enablePostgresUser Assign a password to the "postgres" admin user. Otherwise, remote access will be blocked for this user
  ##
  enablePostgresUser: true
  ## @param auth.postgresPassword Password for the "postgres" admin user. Ignored if `auth.existingSecret` is provided
  ##
  postgresPassword: "system"
  ## @param auth.username Name for a custom user to create
  ##
  #username: openk9
  ## @param auth.password Password for the custom user to create. Ignored if `auth.existingSecret` is provided
  ##
  #password: openk9
  ## @param auth.database Name for a custom database to create
  ##
  #database: openk9
  ## @param auth.replicationUsername Name of the replication user
  ##
  #replicationUsername: repl_user
  ## @param auth.replicationPassword Password for the replication user. Ignored if `auth.existingSecret` is provided
  ##
  #replicationPassword: ""
  
  ## @param auth.existingSecret Name of existing secret to use for PostgreSQL credentials. `auth.postgresPassword`, `auth.password`, and `auth.replicationPassword` will be ignored and picked up from this secret. The secret might also contains the key `ldap-password` if LDAP is enabled. `ldap.bind_password` will be ignored and picked from this secret in this case.
  ##
  existingSecret: "postgres-password"
  ## @param auth.secretKeys.adminPasswordKey Name of key in existing secret to use for PostgreSQL credentials. Only used when `auth.existingSecret` is set.
  ## @param auth.secretKeys.userPasswordKey Name of key in existing secret to use for PostgreSQL credentials. Only used when `auth.existingSecret` is set.
  ## @param auth.secretKeys.replicationPasswordKey Name of key in existing secret to use for PostgreSQL credentials. Only used when `auth.existingSecret` is set.
  ##
  secretKeys:
    adminPasswordKey: postgres-password
    userPasswordKey: user-password
    replicationPasswordKey: replication-password

architecture: standalone

primary:  
  initdb:
    args: "--no-locale --encoding=UTF8"
  resources:
    limits: 
      memory: 2Gi
      cpu: 1000m
    requests:
      memory: 1Gi
      cpu: 100m
  persistence:
    size: 1Gi
  livenessProbe:
    enabled: false
    initialDelaySeconds: 20
  readinessProbe:
    enabled: false 
    initialDelaySeconds: 20
  podSecurityContext:
    enabled: true
    fsGroup: null
  containerSecurityContext:
    enabled: false

volumePermissions:
    enabled: true


serviceAccount:
  create: false
  # Rimuovi o commenta il nome del service account se non necessario
  # name: openk9-postgresql-sa

podSecurityContext:
  enabled: true
  fsGroup: null

containerSecurityContext:
  enabled: false


metrics:
  enabled: false

backup:
  enabled: false
  cronjob:
    podSecurityContext:
      enabled: true
      fsGroup: null
    containerSecurityContext:
      enabled: false