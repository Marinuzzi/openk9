# This scenario creates a single-instance standalone PostgreSQL
# machine, with the most basic configuration and limited
# resource to be fit in a local CodeReady Containers environment


image:
  # We want latest PostgreSQL 14.x
  tag: 14

auth:
  ## @param auth.enablePostgresUser Assign a password to the "postgres" admin user. Otherwise, remote access will be blocked for this user
  ##
  enablePostgresUser: true
  ## @param auth.username Name for a custom user to create
  ##
  #username: "openk9"
  ## @param auth.database Name for a custom database to create
  ##
  #database: "openk9"
  ## @param auth.replicationUsername Name of the replication user
  ##
# replicationUsername: repl_user
  ## @param auth.existingSecret Name of existing secret to use for PostgreSQL credentials. `auth.postgresPassword`, `auth.password`, and `auth.replicationPassword` will be ignored and picked up from this secret. The secret might also contains the key `ldap-password` if LDAP is enabled. `ldap.bind_password` will be ignored and picked from this secret in this case.
  ##
  existingSecret: "postgres-password"
  ## @param auth.secretKeys.adminPasswordKey Name of key in existing secret to use for PostgreSQL credentials. Only used when `auth.existingSecret` is set.
  ## @param auth.secretKeys.userPasswordKey Name of key in existing secret to use for PostgreSQL credentials. Only used when `auth.existingSecret` is set.
  ## @param auth.secretKeys.replicationPasswordKey Name of key in existing secret to use for PostgreSQL credentials. Only used when `auth.existingSecret` is set.
  ##
  secretKeys:
    adminPasswordKey: postgres-password
    userPasswordKey: user-password
    replicationPasswordKey: replication-password
 
#auth:
  # enable default "postgres" admin user
#  enablePostgresUser: true
  # password for default postgres admin user
#  postgresPassword: "system"
  # custom user to create
#  username: "openk9"
  # custom user password
#  password: "openk9"
  # custom database
#  database: "openk9"

architecture: standalone

primary:  
  initdb:
    args: "--no-locale --encoding=UTF8"
  resources:
    limits: 
      memory: 512Mi
      cpu: 250m
    requests:
      memory: 256Mi
      cpu: 250m

  # OpenShift doesn't like static uid/gui
  podSecurityContext:
    enabled: false

  # OpenShift doesn't like static uid/gui
  containerSecurityContext:
    enabled: true
    runAsUser: null

persistence:
  size: 2Gi


