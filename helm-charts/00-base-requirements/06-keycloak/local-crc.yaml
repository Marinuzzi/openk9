# This scenario creates a single-instance standalone Keycloak
# machine, with the most basic configuration and limited
# resource to be fit in a local CodeReady Containers environment
###############################################################

# Number of Keycloak replicas to deploy
replicaCount: 1

# Keycloak image version. The preferred way is to install the chart
# version with the desired app version
# images:
#   tag: 12.0.4

# Disable PostgreSQL dependency
postgresql:
  enabled: false

externalDatabase:
  host: postgresql
  port: 5432
  user: keycloak
  database: keycloak
  existingSecret: postgresql-keycloak-secret
  existingSecretPasswordKey: "password"  

service:
  ports:
    http: 8080

production: true

proxy: edge

# OpenShift doesn't like static uid/gui
podSecurityContext:
  fsGroup: null

# OpenShift doesn't like static uid/gui
containerSecurityContext:
  runAsUser: null
  runAsNonRoot: true

ingress:
  ## @param ingress.enabled Enable ingress record generation for Keycloak
  ##
  enabled: true
  ingressClassName: ""
  pathType: Prefix
  apiVersion: "networking.k8s.io/v1"
  hostname: test-keycloaknew.mycluster-fra02-b3-642985-aff3c2f7c4350abb9e85aa5214015dda-0000.eu-de.containers.appdomain.cloud  #-TOMD
  path: /
  servicePort: 8080
  ## @param ingress.annotations [object] Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
  ## Use this parameter to set the required annotations for cert-manager, see
  ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
  ## e.g:
  ## annotations:
  ##   kubernetes.io/ingress.class: nginx
  ##   cert-manager.io/cluster-issuer: cluster-issuer-name
  ##
  #annotations:
  ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
  ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" (tpl .Values.ingress.hostname .) }}`
  ## You can:
  ##   - Use the `ingress.secrets` parameter to create this TLS secret
  ##   - Rely on cert-manager to create it by setting the corresponding annotations
  ##   - Rely on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
  ##
  tls: true
  ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
  ##
  selfSigned: true
 