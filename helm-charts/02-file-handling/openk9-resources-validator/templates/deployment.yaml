apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "common.names.name" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
  template:
    metadata:
      {{- if .Values.commonAnnotations }}
      annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 8 }}
      {{- end }}
      labels: {{- include "common.labels.matchLabels" . | nindent 8 }}
    spec:
      {{- include "common.images.renderPullSecrets" . | nindent 6 }}
      #serviceAccountName: {{ template "common.names.serviceAccountName" . }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      securityContext: {{ toYaml .Values.podSecurityContext | indent 8 }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.hostAliases "context" $) | nindent 8 }}
      containers:
        - name: {{ .Release.Name }}
          image: {{ template "common.images.fullname" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          envFrom:
            - configMapRef:
                name: {{ template "common.names.name" . }}-config
          env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: {{ .Values.opensearch.keyPasswordEnvName }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.opensearch.passwordSecretName }}
                  key: {{ .Values.opensearch.keyPasswordSecret }}
          ports:
            - containerPort: 8080
              name: http
          #####################  Probes  ##########################
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              httpHeaders:
                - name: Accept
                  value: application/json
              path: /q/health/live
              port: http
            {{- /*
              scheme: {{ ternary "HTTPS" "HTTP" .Values.tls.enabled | quote }}
            */}}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /q/health/ready
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: /q/health/started
              port: http
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds }}
            successThreshold: {{ .Values.startupProbe.successThreshold }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
          {{- end }}
          ############################################################

          
          
          
