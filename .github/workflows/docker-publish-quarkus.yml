# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#publishing-using-gradle

name: Quarkus publish

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push-osgi:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Entity Manager
        run: |
        ./gradlew build -p ./quarkus/entity-manager -Dquarkus.package.type=jar \
        -Dquarkus.native.container-build=true -Dquarkus.container-image.push=true \
        -Dquarkus.container-image.username=${{ secrets.DOCKERHUB_USERNAME }} \
        -Dquarkus.container-image.password=${{ secrets.DOCKERHUB_TOKEN }} \
        -Dquarkus.container-image.name=openk9-entity-manager \
        -Dquarkus.container-image.tag=latest

      - name: Push Entity Manager
        run: |
          docker tag openk9-entity-manager:latest smclab/openk9-entity-manager:latest
          docker push smclab/openk9-entity-manager:latest