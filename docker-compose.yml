version: "3.5"
services:
    rabbitmq:
        image: rabbitmq:3.8-management
        container_name: rabbitmq
        hostname: rabbitmq
        environment:
            RABBITMQ_DEFAULT_USER: openk9
            RABBITMQ_DEFAULT_PASS: openk9
        ports:
            - 5672:5672
            - 15672:15672
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
        container_name: elasticsearch
        hostname: elasticsearch
        environment:
            - node.name=elasticsearch
            - cluster.name=docker-cluster
            - cluster.initial_master_nodes=elasticsearch
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
            - ELASTIC_USERNAME=elastic
            - ELASTIC_PASSWORD=elastic
        ports:
            - "9200:9200"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - ./elasticsearch/data:/usr/share/elasticsearch/data
    kibana:
        image: docker.elastic.co/kibana/kibana:7.15.0
        container_name: kibana
        ports:
            - "5601:5601"
        environment:
            ELASTICSEARCH_URL: http://elasticsearch:9200
            ELASTICSEARCH_HOSTS: http://elasticsearch:9200
            ELASTICSEARCH_USERNAME: elastic
            ELASTICSEARCH_PASSWORD: elastic
    datasource:
        image: smclab/openk9-datasource:latest
        container_name: datasource
        environment:
            RABBITMQ_HOST: 'rabbitmq'
            RABBITMQ_PASSWORD: 'openk9'
            RABBITMQ_USERNAME: 'openk9'
            RABBITMQ_PORT: '5672'
            QUARKUS_DATASOURCE_REACTIVE_URL: 'postgresql://postgres/openk9'
            QUARKUS_DATASOURCE_USERNAME: 'openk9'
            QUARKUS_DATASOURCE_PASSWORD: 'openk9'
            QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION: 'update'
            QUARKUS_HTTP_ACCESS_LOG_ENABLED: 'true'
            QUARKUS_HTTP_ACCESS_LOG_PATTERN: '%h %l %u %t "%r" %s %b %D'
            QUARKUS_CONSUL_CONFIG_AGENT_HOST_PORT: 'consul:8500'
            SERVICE_DISCOVERY_REGISTRATION_SERVICE_ADDRESS: 'datasource'
            SERVICE_DISCOVERY_REGISTRATION_SERVICE_PORT: '8080'
        expose:
            - "1099"
            - "8080"
            - "44444"
            - "8101"
            - "8181"
            - "5005"
    entity-manager:
        image: smclab/openk9-entity-manager:latest
        container_name: entity-manager
        environment:
            RABBITMQ_HOST: 'rabbitmq'
            RABBITMQ_PASSWORD: 'openk9'
            RABBITMQ_USERNAME: 'openk9'
            RABBITMQ_PORT: '5672'
            QUARKUS_HTTP_ACCESS_LOG_ENABLED: 'true'
            QUARKUS_HTTP_ACCESS_LOG_PATTERN: '%h %l %u %t "%r" %s %b %D'
            QUARKUS_ELASTICSEARCH_HOST: elasticsearch:9200
            QUARKUS_ELASTICSEARCH_USERNAME: elastic
            QUARKUS_ELASTICSEARCH_PASSWORD: elastic
            OPENK9_ENTITY_UNIQUE_ENTITIES: 'date,organization,loc,email,document,bank,person'
            OPENK9_ENTITY_MIN_HOPS: '1'
            OPENK9_ENTITY_MAX_HOPS: '2'
            OPENK9_ENTITY_SCORE_THRESHOLD: '0.8'
            QUARKUS_CONSUL_CONFIG_AGENT_HOST_PORT: 'consul:8500'
            HZ_NETWORK_JOIN_KUBERNETES_NAMESPACE: 'k9-develop'
            docker: 'false'
        expose:
            - "1099"
            - "8080"
            - "44444"
            - "8101"
            - "8181"
            - "5005"
        ports:
            - 8186:8181
    index-writer:
        image: smclab/openk9-index-writer:latest
        container_name: index-writer
        command: sh -c "/wait && karaf run debug"
        environment:
            WAIT_HOSTS: rabbitmq:5672, elasticsearch:9200
            WAIT_HOSTS_TIMEOUT: 300
            JAVA_DEBUG_PORT: '*:5005'
        expose:
            - "1099"
            - "8080"
            - "44444"
            - "8101"
            - "8181"
            - "5005"
        ports:
            - 8185:8181
    ingestion:
        image: smclab/openk9-ingestion:latest
        container_name: ingestion
        environment:
            RABBITMQ_HOST: 'rabbitmq'
            RABBITMQ_PASSWORD: 'openk9'
            RABBITMQ_USERNAME: 'openk9'
            RABBITMQ_PORT: '5672'
            QUARKUS_HTTP_ACCESS_LOG_ENABLED: 'true'
            QUARKUS_HTTP_ACCESS_LOG_PATTERN: '%h %l %u %t "%r" %s %b %D'
            QUARKUS_CONSUL_CONFIG_AGENT_HOST_PORT: 'consul:8500'
            QUARKUS_HTTP_LIMITS_MAX_BODY_SIZE: '10240K'
        expose:
            - "1099"
            - "8080"
            - "44444"
            - "8101"
            - "8181"
            - "5005"
    plugin-driver-manager:
        image: smclab/openk9-plugin-driver-manager:latest
        container_name: plugin-driver-manager
        command: sh -c "/wait && karaf run debug"
        environment:
            WAIT_HOSTS: rabbitmq:5672
            WAIT_HOSTS_TIMEOUT: 300
            JAVA_DEBUG_PORT: '*:5005'
        expose:
            - "1099"
            - "8080"
            - "44444"
            - "8101"
            - "8181"
            - "5005"
        ports:
            - 8183:8181
    searcher:
        image: smclab/openk9-searcher:latest
        container_name: searcher
        command: sh -c "/wait && karaf run debug"
        environment:
            WAIT_HOSTS: elasticsearch:9200
            WAIT_HOSTS_TIMEOUT: 300
            JAVA_DEBUG_PORT: '*:5005'
        expose:
            - "1099"
            - "8080"
            - "44444"
            - "8101"
            - "8181"
            - "5005"
        ports:
            - 8080:8080
            - 8181:8181
    postgres:
        image: postgres:latest
        container_name: postgres
        hostname: postgres
        environment:
            - POSTGRES_PASSWORD=openk9
            - POSTGRES_USER=openk9
            - POSTGRES_DB=openk9
            - PGDATA=/var/lib/postgresql/data/pgdata
        volumes:
            - ./postgres/db-data:/var/lib/postgresql/data
    adminer:
        image: adminer
        restart: always
        ports:
            - 5050:8080
    web-parser:
        image: smclab/openk9-web-parser:latest
        container_name: web-parser
        environment:
            INGESTION_URL: "http://openk9.io/api/v1/ingestion/"
            DELETE_URL: "http://openk9.io/api/v1/ingestion/"
        ports:
            - "5008:80"
            - "6800:6800"
    search-frontend:
        image: smclab/openk9-search-frontend:latest
        container_name: search-frontend
        ports:
            - "8081:80"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.frontend.entrypoints=web"
            - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
    search-admin:
        image: smclab/openk9-admin-ui:latest
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.admin.entrypoints=web"
            - "traefik.http.routers.admin.rule=PathPrefix(`/admin`)"
    reverse-proxy:
        image: traefik:v2.3
        command: --api.insecure=true --providers.docker --providers.docker.exposedbydefault=false --entrypoints.web.address=:80
        networks:
            default:
                aliases:
                    - openk9.io
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        ports:
            - '8888:80'
            - '8182:8080'
    ner-rabbit:
        image: smclab/spacy-ner-rabbit:latest
        container_name: ner-rabbit
        command: 'sh -c /wait && python main.py'
        environment:
            WAIT_HOSTS: 'rabbitmq:5672'
            WAIT_HOSTS_TIMEOUT: '300'
            RABBIT_HOST: 'rabbitmq'
            RABBIT_PORT: '5672'
            RABBIT_EXCHANGE: 'amq.topic'
            RABBIT_QUEUE_NAME: 'io.openk9.ner'
            RABBIT_PUB_ROUTING_KEY: 'entity-manager-request'
            RABBITMQ_USER: 'openk9'
            RABBITMQ_PASSWORD: 'openk9'
    keycloak:
        image: quay.io/keycloak/keycloak:16.1.0
        environment:
            DB_VENDOR: POSTGRES
            DB_ADDR: postgres:5432
            DB_DATABASE: openk9
            DB_USER: openk9
            DB_SCHEMA: public
            DB_PASSWORD: openk9
            KEYCLOAK_USER: openk9
            KEYCLOAK_PASSWORD: openk9
            PROXY_ADDRESS_FORWARDING: "true"
            KK_TO_RMQ_URL: rabbitmq
            KK_TO_RMQ_PORT: "5672"
            KK_TO_RMQ_USERNAME: openk9
            KK_TO_RMQ_PASSWORD: openk9
            KK_TO_RMQ_VHOST: /
            KK_TO_RMQ_EXCHANGE: auth.topic
        ports:
            - 7070:8080
        depends_on:
            - postgres
            - rabbitmq
    api-aggregator:
        image: smclab/openk9-api-aggregator:latest
        environment:
            QUARKUS_DATASOURCE_REACTIVE_URL: 'postgresql://postgres/openk9'
            QUARKUS_DATASOURCE_USERNAME: 'openk9'
            QUARKUS_DATASOURCE_PASSWORD: 'openk9'
            QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION: 'update'
            QUARKUS_HTTP_ACCESS_LOG_ENABLED: 'true'
            QUARKUS_HTTP_ACCESS_LOG_PATTERN: '%h %l %u %t "%r" %s %b %D'
            QUARKUS_OIDC_AUTH_SERVER_URL: 'http://keycloak:8080/auth/realms/openk9'
            QUARKUS_OIDC_CLIENT_ID: 'openk9'
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.frontend.entrypoints=web"
            - "traefik.http.middlewares.searcher-strip.stripprefix.prefixes=/api"
            - "traefik.http.routers.frontend.rule=PathPrefix(`/api`)"
            - "traefik.http.middlewares.openk9-forwarded-host.headers.customrequestheaders.X-Forwarded-Host=local.openk9.io"
            - "traefik.http.routers.api-aggregator.middlewares=openk9-forwarded-host@docker"

    consul:
        image: consul:1.7
        command: 'agent -dev -ui -client=0.0.0.0 -bind=0.0.0.0 --https-port=8501'
        ports:
            - "8500:8500"
            - "8501:8501"
    neo4j:
        image: neo4j:latest
        container_name: neo4j
        hostname: neo4j
        environment:
            - NEO4J_AUTH=neo4j/openk9
            - NEO4JLABS_PLUGINS=["apoc"]
        volumes:
            - ./neo4j/data:/data
        ports:
            - '7474:7474'
            - '7687:7687'

