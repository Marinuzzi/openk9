version: "3.5"
services:
    rabbitmq:
        image: rabbitmq:3-management
        container_name: rabbitmq
        hostname: rabbitmq
        environment:
            RABBITMQ_DEFAULT_USER: openk9
            RABBITMQ_DEFAULT_PASS: openk9
        ports:
            - 5672:5672
            - 15672:15672
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.9.3
        container_name: elasticsearch
        hostname: elasticsearch
        environment:
            - node.name=elasticsearch
            - cluster.name=docker-cluster
            - cluster.initial_master_nodes=elasticsearch
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - ./elasticsearch/data:/usr/share/elasticsearch/data
    kibana:
        image: docker.elastic.co/kibana/kibana:7.9.3
        container_name: kibana
        ports:
            - "5601:5601"
        environment:
            ELASTICSEARCH_URL: http://elasticsearch:9200
            ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    datasource:
        image: smclab/openk9-datasource:latest
        container_name: openk9-datasource
        command: sh -c "/wait && cp -a /opt/apache-karaf/configs/. /opt/apache-karaf/etc && karaf run debug"
        environment:
            WAIT_HOSTS: postgres:5432, rabbitmq:5672
            WAIT_HOSTS_TIMEOUT: 300
            JAVA_DEBUG_PORT: '*:5005'
        volumes:
            - ./datasource/configs:/opt/apache-karaf/configs
        expose:
            - "1099"
            - "8080"
            - "44444"
            - "8101"
            - "8181"
            - "5005"
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.datasource-docker.loadbalancer.server.port=8080"
            - "traefik.http.middlewares.datasource-strip.stripprefix.prefixes=/api/datasource"
            - "traefik.http.routers.datasource.entrypoints=web"
            - "traefik.http.routers.datasource.rule=PathPrefix(`/api/datasource`)"
            - "traefik.http.middlewares.datasource_compress.compress=true"
    entity-manager:
        image: smclab/openk9-entity-manager:latest
        container_name: openk9-entity-manager
        command: sh -c "/wait && cp -a /opt/apache-karaf/configs/. /opt/apache-karaf/etc && karaf run debug"
        environment:
            WAIT_HOSTS: rabbitmq:5672, neo4j:7687
            WAIT_HOSTS_TIMEOUT: 300
            JAVA_DEBUG_PORT: '*:5005'
        volumes:
            - ./entity-manager/configs:/opt/apache-karaf/configs
        expose:
            - "1099"
            - "8080"
            - "44444"
            - "8101"
            - "8181"
            - "5005"
        ports:
            - 8185:8181
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.entity-manager-docker.loadbalancer.server.port=8080"
            - "traefik.http.middlewares.entity-manager-strip.stripprefix.prefixes=/api/entity-manager"
            - "traefik.http.routers.entity-manager.entrypoints=web"
            - "traefik.http.routers.entity-manager.rule=PathPrefix(`/api/entity-manager`)"
            - "traefik.http.middlewares.entity-manager_compress.compress=true"
            - "traefik.http.routers.entity-manager.middlewares=entity-manager-strip@docker,entity-manager_compress@docker"
    index-writer:
        image: smclab/openk9-index-writer:latest
        container_name: openk9-index-writer
        command: sh -c "/wait && cp -a /opt/apache-karaf/configs/. /opt/apache-karaf/etc && karaf run debug"
        environment:
            WAIT_HOSTS: rabbitmq:5672, elasticsearch:9200
            WAIT_HOSTS_TIMEOUT: 300
            JAVA_DEBUG_PORT: '*:5005'
        volumes:
            - ./index-writer/configs:/opt/apache-karaf/configs
        expose:
            - "1099"
            - "8080"
            - "44444"
            - "8101"
            - "8181"
            - "5005"
        ports:
            - 8185:8181
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.index-writer-docker.loadbalancer.server.port=8080"
            - "traefik.http.middlewares.index-writer-strip.stripprefix.prefixes=/api/index-writer"
            - "traefik.http.routers.index-writer.entrypoints=web"
            - "traefik.http.routers.index-writer.rule=PathPrefix(`/api/index-writer`)"
            - "traefik.http.middlewares.index-writer_compress.compress=true"
            - "traefik.http.routers.index-writer.middlewares=index-writer-strip@docker,index-writer_compress@docker"
    ingestion:
        image: smclab/openk9-ingestion:latest
        container_name: openk9-ingestion
        command: sh -c "/wait && cp -a /opt/apache-karaf/configs/. /opt/apache-karaf/etc && karaf run debug"
        environment:
            WAIT_HOSTS: rabbitmq:5672
            WAIT_HOSTS_TIMEOUT: 300
            JAVA_DEBUG_PORT: '*:5005'
        volumes:
            - ./ingestion/configs:/opt/apache-karaf/configs
        expose:
            - "1099"
            - "8080"
            - "44444"
            - "8101"
            - "8181"
            - "5005"
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.ingestion-docker.loadbalancer.server.port=8080"
            - "traefik.http.middlewares.ingestion-strip.stripprefix.prefixes=/api/ingestion"
            - "traefik.http.routers.ingestion.entrypoints=web"
            - "traefik.http.routers.ingestion.rule=PathPrefix(`/api/ingestion`)"
            - "traefik.http.middlewares.ingestion_compress.compress=true"
            - "traefik.http.routers.ingestion.middlewares=ingestion-strip@docker,ingestion_compress@docker"
    plugin-driver-manager:
        image: smclab/openk9-plugin-driver-manager:latest
        container_name: openk9-plugin-driver-manager
        command: sh -c "/wait && cp -a /opt/apache-karaf/configs/. /opt/apache-karaf/etc && karaf run debug"
        environment:
            WAIT_HOSTS: rabbitmq:5672
            WAIT_HOSTS_TIMEOUT: 300
            JAVA_DEBUG_PORT: '*:5005'
        volumes:
            - ./plugin-driver-manager/configs:/opt/apache-karaf/configs
        expose:
            - "1099"
            - "8080"
            - "44444"
            - "8101"
            - "8181"
            - "5005"
        ports:
            - 8183:8181
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.plugin-driver-manager-docker.loadbalancer.server.port=8080"
            - "traefik.http.middlewares.plugin-driver-manager-strip.stripprefix.prefixes=/api/plugin-driver-manager"
            - "traefik.http.routers.plugin-driver-manager.entrypoints=web"
            - "traefik.http.routers.plugin-driver-manager.rule=PathPrefix(`/api/plugin-driver-manager`)"
            - "traefik.http.middlewares.plugin-driver-manager_compress.compress=true"
            - "traefik.http.routers.plugin-driver-manager.middlewares=plugin-driver-manager-strip@docker,plugin-driver-manager_compress@docker"
    searcher:
        image: smclab/openk9-searcher:latest
        container_name: openk9-searcher
        command: sh -c "/wait && cp -a /opt/apache-karaf/configs/. /opt/apache-karaf/etc && karaf run debug"
        environment:
            WAIT_HOSTS: elasticsearch:9200
            WAIT_HOSTS_TIMEOUT: 300
            JAVA_DEBUG_PORT: '*:5005'
        volumes:
            - ./searcher/configs:/opt/apache-karaf/configs
        expose:
            - "1099"
            - "8080"
            - "44444"
            - "8101"
            - "8181"
            - "5005"
        ports:
            - 8080:8080
            - 8181:8181
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.searcher-docker.loadbalancer.server.port=8080"
            - "traefik.http.middlewares.searcher-strip.stripprefix.prefixes=/api/searcher"
            - "traefik.http.routers.searcher.entrypoints=web"
            - "traefik.http.routers.searcher.rule=PathPrefix(`/api/searcher`)"
            - "traefik.http.middlewares.searcher_compress.compress=true"
            - "traefik.http.routers.searcher.middlewares=searcher-strip@docker,searcher_compress@docker"
            - "traefik.http.middlewares.openk9-forwarded-host.headers.customrequestheaders.X-Forwarded-Host=openk9.io"
            - "traefik.http.routers.searcher.middlewares=searcher-strip@docker,searcher_compress@docker,openk9-forwarded-host@docker"
    postgres:
        image: postgres:latest
        container_name: postgres
        hostname: postgres
        environment:
            - POSTGRES_PASSWORD=openk9
            - POSTGRES_USER=openk9
            - POSTGRES_DB=openk9
            - PGDATA=/var/lib/postgresql/data/pgdata
        volumes:
            - ./postgres/db-data:/var/lib/postgresql/data
    adminer:
        image: adminer
        restart: always
        ports:
            - 5050:8080
    web-parser:
        image: smclab/openk9-web-parser:latest
        container_name: web-parser
        environment:
            INGESTION_URL: "http://openk9.io/api/v1/ingestion/"
        ports:
            - "5008:80"
            - "6800:6800"
    search-standalone-frontend:
        image: smclab/openk9-search-standalone-frontend:latest
        container_name: search-standalone-frontend
        ports:
            - "8081:80"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.frontend.entrypoints=web"
            - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
    search-admin:
        image: smclab/openk9-admin-ui:latest
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.admin.entrypoints=web"
            - "traefik.http.routers.admin.rule=PathPrefix(`/admin`)"
    reverse-proxy:
        image: traefik:v2.3
        command: --api.insecure=true --providers.docker --providers.docker.exposedbydefault=false --entrypoints.web.address=:80
        networks:
            default:
                aliases:
                    - openk9.io
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        ports:
            - '8888:80'
            - '8182:8080'
    admin-logs-service:
        image: smclab/openk9-admin-logs-service:latest
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - /bin/docker:/bin/docker
        labels:
            - "traefik.enable=true"
            - "traefik.http.middlewares.logs-strip.stripprefix.prefixes=/api/logs"
            - "traefik.http.routers.logs.entrypoints=web"
            - "traefik.http.routers.logs.rule=PathPrefix(`/api/logs`)"
            - "traefik.http.routers.logs.middlewares=logs-strip@docker"
            - "traefik.http.routers.traefik.middlewares=traefik-compress"
            - "traefik.http.middlewares.traefik-compress.compress=true"
    js-scripts-executor:
        image: smclab/openk9-js-scripts-executor:latest
        container_name: js-scripts-executor
        ports:
            - 3000:3000
    ner-en:
        image: flair_flair-ner-relations:latest
        container_name: ner-en
        command: gunicorn -w 1 -t 600 -b 0.0.0.0:80 main:app
        ports:
            - 5009:80
    keycloak:
        image: quay.io/keycloak/keycloak:12.0.2
        environment:
            DB_VENDOR: POSTGRES
            DB_ADDR: postgres-keycloak:5432
            DB_DATABASE: keycloak
            DB_USER: openk9
            DB_SCHEMA: public
            DB_PASSWORD: openk9
            KEYCLOAK_USER: openk9
            KEYCLOAK_PASSWORD: openk9
            KK_TO_RMQ_URL: rabbitmq
            KK_TO_RMQ_PORT: 5672
            KK_TO_RMQ_USERNAME: openk9
            KK_TO_RMQ_PASSWORD: openk9
            KK_TO_RMQ_VHOST: /
            KK_TO_RMQ_EXCHANGE: auth.topic
        volumes:
            - ./keycloak/opt/jboss/keycloak/standalone/deployments/:/opt/jboss/keycloak/standalone/deployments/
        ports:
            - 7070:8080
        depends_on:
            - postgres-keycloak
            - rabbitmq
    postgres-keycloak:
        image: postgres:latest
        container_name: postgres-keycloak
        hostname: postgres-keycloak
        environment:
            - POSTGRES_PASSWORD=openk9
            - POSTGRES_USER=openk9
            - POSTGRES_DB=keycloak
            - PGDATA=/var/lib/postgresql/data/pgdata
    neo4j:
        image: neo4j:latest
        container_name: neo4j
        hostname: neo4j
        environment:
            - NEO4J_AUTH=neo4j/openk9
            - NEO4JLABS_PLUGINS=["apoc"]
        volumes:
            - ./neo4j/data:/data
        ports:
            - '7474:7474'
            - '7687:7687'

